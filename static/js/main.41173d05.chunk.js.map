{"version":3,"sources":["config/API.js","components/Authentication.js","components/TimeField.js","components/DayGroup.js","components/Timecard.js","components/App.js","reportWebVitals.js","index.js"],"names":["API","key","Authentication","user","setUser","setAuth","useState","password","setPassword","Card","className","Form","Field","Input","placeholder","onChange","e","target","value","type","Button","animated","primary","onClick","preventDefault","Airtable","apiKey","base","select","maxRecords","view","fields","filterByFormula","eachPage","records","err","console","error","Content","visible","hidden","Icon","name","TimeField","time","setTime","uCS","punch_type","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","timestamp","create","Username","alert","Date","forEach","r","log","maximumAge","timeout","enableHighAccuracy","readOnly","bind","color","DayGroup","Header","Timecard","localStorage","JSON","parse","App","auth","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kVAIeA,EAJH,CACRC,IAAK,qB,wBCqEMC,MA/Df,YAAsD,IAA3BC,EAA0B,EAA1BA,KAAMC,EAAoB,EAApBA,QAASC,EAAW,EAAXA,QACxC,EAAgCC,mBAAS,IAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KAiCA,OACE,cAACC,EAAA,EAAD,CAAMC,UAAU,iBAAhB,SACE,eAACC,EAAA,EAAD,WACE,eAACA,EAAA,EAAKC,MAAN,WACE,6CACA,cAACC,EAAA,EAAD,CACEC,YAAY,WACZC,SAAU,SAAAC,GAAC,OAAIZ,EAAQY,EAAEC,OAAOC,aAGpC,eAACP,EAAA,EAAKC,MAAN,WACE,6CACA,cAACC,EAAA,EAAD,CACEM,KAAK,WACLL,YAAY,WACZC,SAAU,SAAAC,GAAC,OAAIR,EAAYQ,EAAEC,OAAOC,aAGxC,eAACE,EAAA,EAAD,CAAQC,UAAQ,EAACC,SAAO,EAACC,QAjDV,SAAAP,GACnBA,EAAEQ,iBAES,IAAIC,IAAS,CAAEC,OAAQ1B,EAAIC,MAAO0B,KAAK,oBAElDA,CAAK,aACFC,OAAO,CAENC,WAAY,EACZC,KAAM,YACNC,OAAQ,CAAC,eAAgB,gBACzBC,gBAAgB,mBAAD,OAAqB7B,EAArB,OAEhB8B,UACC,SAAeC,GAAU,IAAD,SAEpB,UAAAA,EAAQ,UAAR,mBAAYH,cAAZ,eAAqB,mBAArB,UACAG,EAAQ,UADR,iBACA,EAAYH,cADZ,aACA,EAAqB,kBAEjBG,EAAQ,GAAGH,OAAO,kBAAoBxB,GAAUF,GAAQ,MAGhE,SAAe8B,GACTA,GACFC,QAAQC,MAAMF,OAyBlB,UACE,cAACf,EAAA,EAAOkB,QAAR,CAAgBC,SAAO,EAAvB,oBACA,cAACnB,EAAA,EAAOkB,QAAR,CAAgBE,QAAM,EAAtB,SACE,cAACC,EAAA,EAAD,CAAMC,KAAK,2B,2BCERC,EA1DG,WAChB,MAAwBrC,mBAAS,MAAjC,mBAAOsC,EAAP,KAAaC,EAAb,KAEMC,EAAM,SAAAC,GACVC,UAAUC,YAAYC,oBACpB,SAAAC,GAEE,MAGIA,EAFFC,OAAUC,EADZ,EACYA,SAAUC,EADtB,EACsBA,UACpBC,EACEJ,EADFI,UAGW,IAAI9B,IAAS,CAAEC,OAAQ1B,EAAIC,MAAO0B,KAAK,oBAEpDA,CAAK,eAAe6B,OAClB,CACE,CACEzB,OAAQ,CACN0B,SAAU,YACV,aAAcF,EACd,iBAAkBF,EAClB,kBAAmBC,EACnB,aAAcP,MAIpB,SAACZ,EAAKD,GACJ,GAAIC,EAAK,OAAOuB,MAAMvB,GACtBU,EAAQ,IAAIc,KAAKJ,IACjBrB,EAAQ0B,SAAQ,SAAAC,GAAC,OAAIzB,QAAQ0B,IAAID,YAOvC,SAAA1B,GACEC,QAAQ0B,IAAI3B,GACZuB,MAAM,qDAER,CAAEK,WAAY,IAAOC,QAAS,IAAMC,oBAAoB,KAI5D,OACE,gCACE,cAACpD,EAAA,EAAD,CAAOqD,UAAQ,EAAChD,MAAO0B,IACvB,cAACxB,EAAA,EAAD,CAAQE,SAAO,EAACC,QAASuB,EAAIqB,KAAK,EAAM,MAAxC,sBAGA,cAACtD,EAAA,EAAD,CAAOqD,UAAQ,EAAChD,MAAO,QACvB,cAACE,EAAA,EAAD,CAAQgD,MAAM,MAAM7C,QAASuB,EAAIqB,KAAK,EAAM,OAA5C,2B,OC9BSE,MArBf,WAII,OACI,sBAAK3D,UAAU,WAAf,UACI,cAAC4D,EAAA,EAAD,qCACA,cAAC,EAAD,IASA,uBAAOnD,KAAK,SAASD,MAAM,kBCAxBqD,MAjBf,YAA4B,EAARpE,KAAS,IACzB,EAA8BG,mBAASkE,aAAY,SAAeC,KAAKC,MAAMF,aAAY,UAAgB,IAAzG,mBAQA,OARA,UASI,gCACI,cAAC,EAAD,IACA,uBAAOrD,KAAK,SAASD,MAAM,gB,OCCxByD,MAXf,WACE,MAAwBrE,oBAAS,GAAjC,mBAAOsE,EAAP,KAAavE,EAAb,KACA,EAAwBC,mBAAS,IAAjC,mBAAOH,EAAP,KAAaC,EAAb,KAEA,OACGwE,EAED,cAAC,EAAD,CAAUzE,KAAMA,IADhB,cAAC,EAAD,CAAgBA,KAAMA,EAAMC,QAASA,EAASC,QAASA,KCD5CwE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.41173d05.chunk.js","sourcesContent":["const API = {\r\n    key: 'keyNZDAS0G7GnQ6Tl'\r\n}\r\n\r\nexport default API;","import React, { useState } from 'react'\r\n\r\nimport { Card, Form, Input, Button, Icon } from 'semantic-ui-react'\r\nimport USERS from '../config/USERS'\r\nimport API from '../config/API'\r\nimport Airtable from 'airtable'\r\n\r\nfunction Authentication ({ user, setUser, setAuth }) {\r\n  const [password, setPassword] = useState('')\r\n\r\n  const authenticate = e => {\r\n    e.preventDefault()\r\n\r\n    var base = new Airtable({ apiKey: API.key }).base('app7hR5UDZ4st97XS')\r\n\r\n    base('Employees')\r\n      .select({\r\n        // Selecting the first 3 records in Grid view:\r\n        maxRecords: 1,\r\n        view: 'Grid view',\r\n        fields: ['Emp Username', 'Emp Password'],\r\n        filterByFormula: `{Emp Username}='${user}'`\r\n      })\r\n      .eachPage(\r\n        function page (records) {\r\n          if (\r\n            records[0]?.fields?.['Emp Password'] &&\r\n            records[0]?.fields?.['Emp Username']\r\n          ) {\r\n            if (records[0].fields['Emp Password'] === password) setAuth(true)\r\n          }\r\n        },\r\n        function done (err) {\r\n          if (err) {\r\n            console.error(err)\r\n            return\r\n          }\r\n        }\r\n      )\r\n  }\r\n\r\n  return (\r\n    <Card className='Authentication'>\r\n      <Form>\r\n        <Form.Field>\r\n          <label>Username</label>\r\n          <Input\r\n            placeholder='Username'\r\n            onChange={e => setUser(e.target.value)}\r\n          />\r\n        </Form.Field>\r\n        <Form.Field>\r\n          <label>Password</label>\r\n          <Input\r\n            type='password'\r\n            placeholder='Password'\r\n            onChange={e => setPassword(e.target.value)}\r\n          />\r\n        </Form.Field>\r\n        <Button animated primary onClick={authenticate}>\r\n          <Button.Content visible>Submit</Button.Content>\r\n          <Button.Content hidden>\r\n            <Icon name='arrow right' />\r\n          </Button.Content>\r\n        </Button>\r\n      </Form>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default Authentication\r\n","import React, { useState } from 'react'\r\nimport { Input, Button } from 'semantic-ui-react'\r\nimport Airtable from 'airtable'\r\nimport API from '../config/API'\r\nimport moment from 'moment'\r\n\r\nconst TimeField = () => {\r\n  const [time, setTime] = useState(null)\r\n\r\n  const uCS = punch_type => {\r\n    navigator.geolocation.getCurrentPosition(\r\n      position => {\r\n        //const timeObj = JSON.parse(timeStr);\r\n        const {\r\n          coords: { latitude, longitude },\r\n          timestamp\r\n        } = position\r\n\r\n        const base = new Airtable({ apiKey: API.key }).base('app7hR5UDZ4st97XS')\r\n\r\n        base('Punch Times').create(\r\n          [\r\n            {\r\n              fields: {\r\n                Username: 'msorenson',\r\n                'Punch Time': timestamp,\r\n                'Punch Latitude': latitude,\r\n                'Punch Longitude': longitude,\r\n                'Punch Type': punch_type\r\n              }\r\n            }\r\n          ],\r\n          (err, records) => {\r\n            if (err) return alert(err)\r\n            setTime(new Date(timestamp))\r\n            records.forEach(r => console.log(r))\r\n          }\r\n        )\r\n\r\n        // timeObj[Date.now().toString()] = { latitude, longitude, timestamp, user };\r\n        // updateTimeObj(timeObj);\r\n      },\r\n      err => {\r\n        console.log(err)\r\n        alert('Please \"Allow\" location services for this site.')\r\n      },\r\n      { maximumAge: 10000, timeout: 5000, enableHighAccuracy: true }\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Input readOnly value={time} />\r\n      <Button primary onClick={uCS.bind(this, 'In')}>\r\n        Clock In\r\n      </Button>\r\n      <Input readOnly value={'val'} />\r\n      <Button color='red' onClick={uCS.bind(this, 'Out')}>\r\n        Clock Out\r\n      </Button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TimeField\r\n","import React from 'react';\r\nimport { Grid, Header } from 'semantic-ui-react';\r\n\r\nimport TimeField from './TimeField';\r\nimport '../styles/DayGroup.css';\r\n\r\nfunction DayGroup() {\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"DayGroup\">\r\n            <Header>Monday August 23, 2021</Header>\r\n            <TimeField />\r\n\r\n            {/* \r\n            {\r\n                Object.keys(timeObj).map(key => {\r\n                    return <TimeField key={key} objKey={key} timeStr={JSON.stringify(timeObj)} updateTimeObj={updateTimeObj} user={user} />\r\n                })\r\n            }\r\n            <TimeField key='1' objKey='1' timeStr={JSON.stringify(timeObj)} updateTimeObj={updateTimeObj} user={user} /> */}\r\n            <input type=\"button\" value=\"New Entry\" />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DayGroup;","import React, { useState, useEffect } from 'react';\r\n\r\nimport DayGroup from './DayGroup';\r\n\r\n\r\nfunction Timecard({ user }) {\r\n    const [timeObj, setTimeObj] = useState(localStorage['timecard'] ? JSON.parse(localStorage['timecard']) : {});\r\n\r\n    const updateTimeObj = newObj => {\r\n        localStorage['timecard'] = JSON.stringify(newObj);\r\n\r\n        setTimeObj(newObj);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <DayGroup />\r\n            <input type=\"button\" value=\"Add Day\" />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Timecard;","import React, { useState } from 'react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\n\r\nimport Authentication from './Authentication';\r\nimport Timecard from './Timecard';\r\nimport '../styles/Authentication.css';\r\n\r\nfunction App() {\r\n  const [auth, setAuth] = useState(false);\r\n  const [user, setUser] = useState('');\r\n\r\n  return (\r\n    !auth ? \r\n    <Authentication user={user} setUser={setUser} setAuth={setAuth} /> :\r\n    <Timecard user={user} />\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}